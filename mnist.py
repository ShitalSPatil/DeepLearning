# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n3aTRjh1fE8QcLMIk6DgHQQvEZ8WSvfb
"""

import tensorflow as tf

tf.__version__

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

x_train.shape, y_train.shape, x_test.shape, y_test.shape

import matplotlib.pyplot as plt

plt.imshow(x_train[10])

x_train = x_train/255.0
x_test = x_test/255.0

x_train[10]

x_train.shape

x_train = x_train.reshape(60000,-1)

x_test = x_test.reshape(10000,-1)

y_train.shape

y_train[10]

y_train=tf.keras.utils.to_categorical(y_train)
y_test=tf.keras.utils.to_categorical(y_test)

y_train.shape

y_train[10]

model=tf.keras.models.Sequential()

hidden = tf.keras.layers.Dense(units=100,activation='relu',input_shape=(784,))
#hidden_2 = tf.keras.layers.Dense(units=16,activation='relu',input_shape=(784,))

output = tf.keras.layers.Dense(units=10,activation='softmax')

model.add(hidden)
#model.add(hidden_2)
model.add(output)

model.summary()

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,y_train,batch_size=64,epochs=10,validation_data=(x_test,y_test))

model.predict(x_train[10:12])

x_train[10:12].shape

x_train[10:11].shape

plt.imshow(x_train[11].reshape(28,28))

