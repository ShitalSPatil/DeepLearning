# -*- coding: utf-8 -*-
"""google_stocks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X4gCoazMWC52zMrhkUYFuLq_C5zNG899
"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Google_Stock_Price_Train.csv')

df.head(5)

X = df[['Open']]

plt.plot(ser1,X)

ser1 = pd.to_datetime(df['Date'])

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_scaled=scaler.fit_transform(X)

X_train,y_train = [],[]
for i in range(60,X_scaled.shape[0]):
    y_train.append(X_scaled[i])
    X_train.append(X_scaled[i-60:i,:])

import numpy as np
X_train,y_train = np.array(X_train), np.array(y_train)

X_train.shape

A = np.hstack([X_train[:,-1:],y_train.reshape(-1,1)])

A.shape

A[:10]

X_scaled.shape

from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.models import Sequential

model = Sequential()
model.add(LSTM(units=50, input_shape = (60,1), return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(units=50,return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(units=50,return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(units=50,return_sequences=False))
model.add(Dropout(0.2))
model.add(Dense(units=1))

model.summary()

model.compile(optimizer='adam', loss='mean_squared_error')

model.fit(X_train,y_train,epochs=100,batch_size=32)

X.head(5)

df_test = pd.read_csv('Google_Stock_Price_Test.csv')

X1 = df_test[['Open']]

X0 = X.iloc[-60:].values

X0.shape

X0[-20:]

X1 = X1.values

X1.shape

X_test = np.vstack([X0,X1])
X_test.shape

X_test = scaler.transform(X_test)

X_test.shape

X_test1 = []
for i in range(60,80):
    X_test1.append(X_test[i-60:i,:])

X_test1 = np.array(X_test1)
X_test1.shape

y_predict = model.predict(X_test1)

plt.plot(y_predict, c='red')
plt.plot(scaler.transform(df_test[['Open']]),c='blue')



